Java中的final关键字
	Java中的final关键字非常重要，它可以应用于类、方法以及变量。什么是final关键字？将变量，方法和类声
明为final代表了什么？使用final的好处是什么？使用final关键字的实例会在TestFinal.java文件中。final经
常和static一起使用来声明常量，你也会看到final是如何改善应用性能的。

final关键字的含义?
	final在Java中是一个保留的关键字，可以声明成员变量、方法、类以及本地变量。一旦你将引用声明作final
，你将不能改变这个引用了，编译器会检查代码，如果你试图将变量再次初始化的话，编译器会报编译错误。

什么是final变量？
	凡是对成员变量或者本地变量(在方法中的或者代码块中的变量称为本地变量)声明为final的都叫作final变量
。final变量经常和static关键字一起使用，作为常量。
	final成员变量表示常量，只能被赋值一次，并且在生存期内不可以改变它的值，即赋值后值不再改变。更重要
的是，final会告诉编译器，这个数据是不会修改的，那么编译器就可能会在编译时期就对该数据进行替换甚至执行
计算，这样可以对我们的程序起到一点优化。不过在针对基本类型和引用类型时，final关键字的效果存在细微差别。
当final修饰一个基本数据类型时，表示该基本数据类型的值一旦在初始化后便不能发生变化；如果final修饰一个
引用类型时，则在对其初始化之后便不能再让其指向其他对象了，但该引用所指向的对象的内容是可以发生变化的。
本质上是一回事，因为引用的值是一个地址，final要求值，即地址的值不发生变化。
	final修饰一个成员变量（属性），必须要显示初始化。这里有两种初始化方式，一种是在变量声明的时候初始
化；第二种方法是在声明变量的时候不赋初值，但是要在这个变量所在的类的所有的构造函数中对这个变量赋初值。
	当函数的参数类型声明为final时，说明该参数是只读型的。即你可以读取使用该参数，但是无法改变该参数的
值。

什么是final方法?
	final也可以声明方法。方法前面加上final关键字，表示此方法已经是“最后的、最终的”含义，代表这个方法
可以被子类的方法重写（可以重载多个final修饰的方法）。这种使用方式主要是从设计的角度考虑，即明确告诉其
他可能会继承该类的程序员，不希望他们去覆盖这个方法，这种方式我们很容易理解。如果你认为一个方法的功能已
经足够完整了，子类中不需要改变的话，你可以声明此方法为final,明确禁止 该方法在子类中被覆盖的情况下才将
方法设置为final的。即父类的final方法是不能被子类所覆盖的，也就是说子类是不能够存在和父类一模一样的方
法的。。final方法比非final方法要快，因为在编译的时候已经静态绑定了，不需要在运行时再动态绑定。
	关于private和final关键字还有一点联系，这就是类中所有的private方法都隐式地指定为是final的，由于无
法在类外使用private方法，所以也就无法覆盖它。也就是说，如果父类中final修饰的方法同时访问控制权限为
private，将会导致子类中不能直接继承到此方法，因此，此时可以在子类中定义相同的方法名和参数，此时不再产
生重写与final的矛盾，而是在子类中重新定义了新的方法。（注：类的private方法会隐式地被指定为final方法。
）。

什么是final类？
	使用final来修饰的类叫作final类。final类通常功能是完整的，它们不能被继承。Java中有许多类是final
的，譬如String, Interger以及其他包装类。也就是说，如果一个类你永远不会让他被继承，就可以用final进行
修饰。final类中的成员变量可以根据需要设为final，但是要注意final类中的所有成员方法都会被隐式地指定为
final方法。

final关键字的好处
1.final关键字提高了性能。JVM和Java应用都会缓存final变量。
2.final变量可以安全的在多线程环境下进行共享，而不需要额外的同步开销。
3.使用final关键字，JVM会对方法、变量及类进行优化。

不可变类
	创建不可变类要使用final关键字。不可变类是指它的对象一旦被创建了就不能被更改了。String是不可变类
的代表。不可变类有很多好处，譬如它们的对象是只读的，可以在多线程环境下安全的共享，不用额外的同步开销
等等。

关于final的重要知识点
1.final关键字可以用于成员变量、本地变量、方法以及类。

2.final成员变量必须在声明的时候初始化或者在构造器中初始化，否则就会报编译错误。

3.你不能够对final变量再次赋值。

4.本地变量必须在声明时赋值。

5.在匿名类中所有变量都必须是final变量。

6.final方法不能被重写。

7.final类不能被继承。

8.final关键字不同于finally关键字，后者用于异常处理。

9.final关键字容易与finalize()方法搞混，后者是在Object类中定义的方法，是在垃圾回收之前被JVM调用的方法。

10.接口中声明的所有变量本身是final的。

11.final和abstract这两个关键字是反相关的，final类就不可能是abstract的。

12.final方法在编译阶段绑定，称为静态绑定(static binding)。

13.没有在声明时初始化final变量的称为空白final变量(blank final variable)，它们必须在构造器中初始化，或者调用this()初始化。不这么做的话，编译器会报错“final变量(变量名)需要进行初始化”。

14.将类、方法、变量声明为final能够提高性能，这样JVM就有机会进行估计，然后优化。

15.按照Java代码惯例，final变量就是常量，而且通常常量名要大写。

16.对于集合对象声明为final指的是引用不能被更改，但是你可以向其中增加，删除或者改变内容。








